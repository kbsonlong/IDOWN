# Generated by Django 2.2.3 on 2019-07-30 13:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('server', '服务器'), ('networkdevice', '网络设备'), ('storagedevice', '存储设备'), ('securitydevice', '安全设备'), ('software', '软件资产')], default='server', max_length=64, verbose_name='资产类型')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='资产序列号')),
                ('status', models.SmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '未知'), (3, '故障'), (4, '备用'), (5, '待初始化')], default=0, verbose_name='设备状态')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('purchase_day', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('expire_day', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='价格')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='批准日期')),
                ('m_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin', to=settings.AUTH_USER_MODEL, verbose_name='资产管理员')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_by', to=settings.AUTH_USER_MODEL, verbose_name='批准人')),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='dev', max_length=20, null=True, unique=True, verbose_name='环境名称')),
                ('name_cn', models.CharField(blank=True, help_text='开发环境', max_length=20, null=True, verbose_name='环境中文名称')),
            ],
            options={
                'verbose_name': '环境名称',
                'verbose_name_plural': '环境名称',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='机房名称')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机房',
                'verbose_name_plural': '机房',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='IDC名称')),
                ('telephone', models.CharField(blank=True, max_length=30, null=True, verbose_name='支持电话')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': 'IDC服务商',
                'verbose_name_plural': 'IDC服务商',
            },
        ),
        migrations.CreateModel(
            name='StorageDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, '磁盘阵列'), (1, '网络存储器'), (2, '磁带库'), (4, '磁带机')], default=0, verbose_name='存储设备类型')),
                ('model', models.CharField(default='未知型号', max_length=128, verbose_name='存储设备型号')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '存储设备',
                'verbose_name_plural': '存储设备',
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, '操作系统'), (1, '办公\\开发软件'), (2, '基础服务')], default=0, verbose_name='软件类型')),
                ('license_num', models.IntegerField(default=1, verbose_name='授权数量')),
                ('name', models.CharField(help_text='例如: RedHat release 7 (Final)', max_length=64, verbose_name='软件名称')),
                ('version', models.CharField(help_text='1.8.1', max_length=64, verbose_name='软件/系统版本')),
            ],
            options={
                'verbose_name': '软件/系统',
                'verbose_name_plural': '软件/系统',
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('i_ip', models.GenericIPAddressField(blank=True, default=None, null=True, verbose_name='公网地址')),
                ('local_ip', models.GenericIPAddressField(blank=True, default=None, null=True, verbose_name='内网地址')),
                ('instance_id', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='ECS实例ID')),
                ('hostname', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='服务器主机名')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, 'ECS'), (1, 'PC服务器'), (2, '小型机')], default=0, verbose_name='服务器类型')),
                ('created_by', models.CharField(choices=[('auto', '自动添加'), ('manual', '手工录入')], default='auto', max_length=32, verbose_name='添加方式')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='服务器型号')),
                ('raid_type', models.CharField(blank=True, max_length=512, null=True, verbose_name='Raid类型')),
                ('os_distribution', models.CharField(blank=True, max_length=64, null=True, verbose_name='发行商')),
                ('os_release', models.CharField(blank=True, max_length=512, null=True, verbose_name='操作系统版本')),
                ('cpu', models.CharField(blank=True, max_length=64, null=True, verbose_name='CPU')),
                ('ram', models.CharField(blank=True, max_length=64, null=True, verbose_name='内存')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
                ('env', models.ForeignKey(blank=True, max_length=64, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Env', verbose_name='所属环境')),
                ('hosted_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosted_on_server', to='assets.Server', verbose_name='宿主机')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
            },
        ),
        migrations.CreateModel(
            name='SecurityDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, '防火墙'), (1, '入侵检测设备'), (2, '互联网网关'), (4, '运维审计系统')], default=0, verbose_name='安全设备类型')),
                ('model', models.CharField(default='未知型号', max_length=128, verbose_name='安全设备型号')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '安全设备',
                'verbose_name_plural': '安全设备',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, '路由器'), (1, '交换机'), (2, '负载均衡'), (4, 'VPN设备')], default=0, verbose_name='网络设备类型')),
                ('vlan_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='VLanIP')),
                ('intranet_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='内网IP')),
                ('model', models.CharField(default='未知型号', max_length=128, verbose_name='网络设备型号')),
                ('firmware', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备固件版本')),
                ('port_num', models.SmallIntegerField(blank=True, null=True, verbose_name='端口个数')),
                ('device_detail', models.TextField(blank=True, null=True, verbose_name='详细配置')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
            },
        ),
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='业务线')),
                ('memo', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('parent_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_level', to='assets.BusinessUnit')),
            ],
            options={
                'verbose_name': '业务线',
                'verbose_name_plural': '业务线',
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='business_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.BusinessUnit', verbose_name='所属业务线'),
        ),
        migrations.AddField(
            model_name='asset',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.IDC', verbose_name='所在机房'),
        ),
        migrations.AddField(
            model_name='asset',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='IDC服务商'),
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=128, verbose_name='硬盘SN号')),
                ('instance_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='磁盘挂载实例')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='磁盘型号')),
                ('size', models.FloatField(blank=True, null=True, verbose_name='磁盘容量(GB)')),
                ('status', models.CharField(choices=[('SATA', 'SATA'), ('SAS', 'SAS'), ('SCSI', 'SCSI'), ('SSD', 'SSD'), ('unknown', 'unknown')], default='unknown', max_length=16, verbose_name='磁盘状态')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '硬盘',
                'verbose_name_plural': '硬盘',
                'unique_together': {('asset', 'sn')},
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='应用名称')),
                ('name_cn', models.CharField(blank=True, max_length=200, null=True, verbose_name='应用中文名称')),
                ('app_type', models.SmallIntegerField(choices=[(0, 'api'), (1, 'base'), (2, 'db'), (3, 'dubbo'), (4, 'messages'), (5, 'search'), (6, 'web')], default=0, verbose_name='应用类型')),
                ('domain', models.CharField(default='', max_length=100, verbose_name='域名')),
                ('port', models.IntegerField(default=0, verbose_name='应用端口')),
                ('values', models.CharField(default="'-Xms512m -Xmx512m'", max_length=500, verbose_name='启动参数')),
                ('war_name', models.CharField(default='app_name.jar', max_length=200, verbose_name='应用包名称')),
                ('leader', models.CharField(default='', max_length=200, verbose_name='应用负责人')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('active', models.SmallIntegerField(choices=[(1, '在线'), (4, '禁用'), (9, '废弃')], default=1, verbose_name='应用状态')),
                ('app_init', models.CharField(default='n', max_length=10, verbose_name='应用是否初始化')),
                ('create_user', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='创建人')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('update_user', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='更新人')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('env', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Env', verbose_name='所属环境')),
                ('member', models.ManyToManyField(help_text='一个应用对应多个成员', to=settings.AUTH_USER_MODEL, verbose_name='项目成员')),
                ('server', models.ManyToManyField(to='assets.Server', verbose_name='部署主机')),
            ],
            options={
                'verbose_name': '应用程序',
                'verbose_name_plural': '应用程序',
                'unique_together': {('name', 'env')},
            },
        ),
    ]
